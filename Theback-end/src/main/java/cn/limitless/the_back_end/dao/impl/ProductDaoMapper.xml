<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.limitless.the_back_end.dao.ProductDao">

    <resultMap id="product" type="cn.limitless.the_back_end.entity.Product">
        <id column="product_id" property="productId"/>
        <result column="product_name" property="productName"/>
        <result column="product_type" property="productType"/>
        <result column="product_price" property="productPrice"/>
        <result column="product_image_id" property="productImageId"/>
        <result column="product_material_list" property="productMaterialList"
                typeHandler="cn.limitless.the_back_end.typehandler.ListToVarcharTypeHandler"/>
    </resultMap>

    <select id="selectProductById" resultType="product">
        select *
        from wintermilktea.Product
        where product_id = #{productId}
    </select>

    <select id="selectProductByName" resultType="product">
        select *
        from wintermilktea.Product
        where product_name = #{productName}
    </select>

    <select id="vagueSelectProductByName" resultType="product">
        select *
        from wintermilktea.Product
        where product_name like concat(concat('%', #{likeName}), '%')
    </select>

    <select id="findAllProduct" parameterType="string" resultType="cn.limitless.the_back_end.entity.Product">
        select *
        from wintermilktea.Product
        order by
        <choose>
            <when test="sorted == null">
                product_id Asc
            </when>
            <otherwise>
                ${sorted}
            </otherwise>
        </choose>
    </select>

    <select id="selectProductByType" resultType="cn.limitless.the_back_end.entity.Product">
        select *
        from wintermilktea.Product
        where product_type = #{productType}
    </select>

    <insert id="addProduct" parameterType="product">
        insert into wintermilktea.Product (product_name, product_type, product_price, product_image_id,
                                           product_material_list)
        values (#{productName}, #{productType}, #{productPrice}, #{productImageId}, #{productMaterialList})
    </insert>

    <delete id="deleteProduct">
        delete
        from wintermilktea.Product
        where product_id = #{productId}
    </delete>

    <update id="updateProduct" parameterType="product">
        update wintermilktea.Product
        set product_name=#{productName},
            product_type=#{productType},
            product_price=#{productPrice},
            product_image_id=#{productImageId},
            product_material_list=#{productMaterialList}
        where product_id = #{productId}
    </update>

</mapper>